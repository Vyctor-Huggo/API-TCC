// This is your Prisma schema file.
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum EquipmentType {
  ELECTRIC
  WATER
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relação com tokens de reset
  resetTokens PasswordResetToken[]

  // relação com equipamentos
  Equipment Equipment[]
} 

model PasswordResetToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([token])
}

model Equipment {
  id        String         @id @default(uuid())
  name      String
  userId    String
  user      User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  type      EquipmentType
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt

  energy    EnergyEquipment?
  water     WaterEquipment?

  @@index([userId, type])
}

/// Só para equipamentos elétricos:
model EnergyEquipment {
  equipmentId String     @id
  equipment   Equipment  @relation(fields: [equipmentId], references: [id], onDelete: Cascade)

  kw          Float
  time        Int
  totalConsum Float

  @@map("energy_equipments")
}

/// Só para equipamentos hídricos:
model WaterEquipment {
  equipmentId String     @id
  equipment   Equipment  @relation(fields: [equipmentId], references: [id], onDelete: Cascade)

  flux        Float   // vazão
  time        Int
  totalConsum Float

  @@map("water_equipments")
}